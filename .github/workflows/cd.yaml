name: AWS RUM Web Client Release

on:
    workflow_dispatch:

jobs:
    publish_to_cdn:
        name: Publish New Release
        runs-on: ubuntu-latest
        environment: cdn-prod-release
        permissions: write-all
        steps:
            - name: Checkout AWS RUM Web Client Repository
              uses: actions/checkout@v2

            - name: Setup Node
              uses: actions/setup-node@v2
              with:
                  node-version: '16.x'
                  registry-url: 'https://registry.npmjs.org'

            - name: Fetch AWS Credentials
              run: |
                  export AWS_ROLE_ARN=${{ secrets.ROLE }}
                  export AWS_WEB_IDENTITY_TOKEN_FILE=/tmp/awscreds
                  export AWS_DEFAULT_REGION=us-east-1

                  echo AWS_WEB_IDENTITY_TOKEN_FILE=$AWS_WEB_IDENTITY_TOKEN_FILE >> $GITHUB_ENV
                  echo AWS_ROLE_ARN=$AWS_ROLE_ARN >> $GITHUB_ENV
                  echo AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION >> $GITHUB_ENV

                  curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL" | jq -r '.value' > $AWS_WEB_IDENTITY_TOKEN_FILE

            - name: Cache NPM modules
              uses: actions/cache@v2
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: Build Release
              run: |
                  npm ci
                  npm run release

            - name: Publish to CloudWatch RUM CDN
              id: publish-cdn
              run: |
                  chmod u+x .github/scripts/deploy.sh
                  .github/scripts/deploy.sh ${{ secrets.BUCKET }}

            - name: Publish to NPM
              run: npm publish
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Create GitHub Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: 'v${{ steps.publish-cdn.outputs.current-version }}'
                  release_name: 'Release ${{ steps.publish-cdn.outputs.current-version }}'
                  body: 'See [CHANGELOG](https://github.com/aws/aws-rum-web/blob/master/CHANGELOG.md) for details.'
                  draft: true
                  prerelease: false
