name: AWS RUM Web Client Release

on:
    workflow_dispatch:
        inputs:
            version:
                description: The version to tag the release with, e.g., 1.2.0, 1.2.1-alpha.1
                required: true

jobs:
    publish_to_cdn:
        name: Publish New Release
        runs-on: ubuntu-latest
        permissions: write-all
        steps:
            - name: Checkout AWS RUM Web Client Repository
              uses: actions/checkout@v2

            - name: Setup Node
              uses: actions/setup-node@v1
              with:
                  node-version: 14

            - name: Fetch AWS Credentials
              run: |
                  export AWS_ROLE_ARN=${{ secrets.PROD_US_EAST_1_ROLE }}
                  export AWS_WEB_IDENTITY_TOKEN_FILE=/tmp/awscreds
                  export AWS_DEFAULT_REGION=us-east-1

                  echo AWS_WEB_IDENTITY_TOKEN_FILE=$AWS_WEB_IDENTITY_TOKEN_FILE >> $GITHUB_ENV
                  echo AWS_ROLE_ARN=$AWS_ROLE_ARN >> $GITHUB_ENV
                  echo AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION >> $GITHUB_ENV

                  curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL" | jq -r '.value' > $AWS_WEB_IDENTITY_TOKEN_FILE

            - name: Cache NPM modules
              uses: actions/cache@v2
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: Build Release
              run: |
                  npm install
                  npm run release

            - name: Publish to CloudWatch RUM CDN
              run: |
                  aws s3api put-object --bucket ${{ secrets.PROD_US_EAST_1_BUCKET }} --key 'content/${{ github.event.inputs.version }}/cwr.js' --body build/assets/cwr.js
                  aws s3api put-object --bucket ${{ secrets.PROD_US_EAST_1_BUCKET }} --key 'content/${{ github.event.inputs.version }}/LICENSE-THIRD-PARTY' --body LICENSE-THIRD-PARTY

            - name: Create GitHub Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: 'aws-rum-web@${{ github.event.inputs.version }}'
                  release_name: 'Release ${{ github.event.inputs.version }}'
                  body: 'Please see [CHANGELOG](https://github.com/aws/aws-rum-web/blob/master/CHANGELOG.md) for details.'
                  draft: true
                  prerelease: false
