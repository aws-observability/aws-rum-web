// Autogenerated by Nightwatch
// Refer to the online docs for more details: https://nightwatchjs.org/gettingstarted/configuration/
const Services = {};
loadServices();

module.exports = {
    // An array of folders (excluding subfolders) where your tests are located;
    // if this is not specified, the test source must be passed as the second argument to the test runner.
    src_folders: [
        'src/plugins/event-plugins/__nightwatch__/PageViewPlugin.test.js',
        'src/sessions/__nightwatch__/VirtualPageLoadTimer.test.js'
    ],

    // See https://nightwatchjs.org/guide/working-with-page-objects/
    page_objects_path: '',

    // See https://nightwatchjs.org/guide/extending-nightwatch/#writing-custom-commands
    custom_commands_path: '',

    // See https://nightwatchjs.org/guide/extending-nightwatch/#writing-custom-assertions
    custom_assertions_path: '',

    // See https://nightwatchjs.org/guide/#external-globals
    globals_path: '',

    webdriver: {},

    test_settings: {
        default: {
            disable_error_log: false,
            launch_url: 'https://nightwatchjs.org',

            screenshots: {
                enabled: false,
                path: 'screens',
                on_failure: true
            },

            desiredCapabilities: {
                browserName: 'chrome'
            },

            webdriver: {
                start_process: true,
                server_path: Services.chromedriver
                    ? Services.chromedriver.path
                    : '/usr/local/lib/node_modules/chromedriver/lib/chromedriver/chromedriver'
            }
        },

        safari: {
            desiredCapabilities: {
                browserName: 'safari',
                alwaysMatch: {
                    acceptInsecureCerts: false
                }
            },
            webdriver: {
                port: 4445,
                start_process: true,
                server_path: '/usr/bin/safaridriver'
            }
        },

        firefox: {
            desiredCapabilities: {
                browserName: 'firefox',
                alwaysMatch: {
                    acceptInsecureCerts: true,
                    'moz:firefoxOptions': {
                        args: [
                            // '-headless',
                            // '-verbose'
                        ]
                    }
                }
            },
            webdriver: {
                start_process: true,
                port: 4444,
                server_path: Services.geckodriver
                    ? Services.geckodriver.path
                    : '/usr/local/lib/node_modules/geckodriver/geckodriver',
                cli_args: [
                    // very verbose geckodriver logs
                    // '-vv'
                ]
            }
        },

        chrome: {
            desiredCapabilities: {
                browserName: 'chrome',
                'goog:chromeOptions': {
                    // More info on Chromedriver: https://sites.google.com/a/chromium.org/chromedriver/
                    //
                    // This tells Chromedriver to run using the legacy JSONWire protocol (not required in Chrome 78)
                    w3c: false,
                    args: [
                        //'--no-sandbox',
                        //'--ignore-certificate-errors',
                        //'--allow-insecure-localhost',
                        //'--headless'
                    ]
                }
            },

            webdriver: {
                start_process: true,
                port: 9515,
                server_path: Services.chromedriver
                    ? Services.chromedriver.path
                    : '/usr/local/lib/node_modules/chromedriver/lib/chromedriver/chromedriver',
                cli_args: [
                    // --verbose
                ]
            }
        },

        edge: {
            desiredCapabilities: {
                browserName: 'MicrosoftEdge',
                'ms:edgeOptions': {
                    w3c: false,
                    // More info on EdgeDriver: https://docs.microsoft.com/en-us/microsoft-edge/webdriver-chromium/capabilities-edge-options
                    args: [
                        //'--headless'
                    ]
                }
            },

            webdriver: {
                start_process: true,
                // Download msedgedriver from https://docs.microsoft.com/en-us/microsoft-edge/webdriver-chromium/
                //  and set the location below:
                server_path: '',
                cli_args: [
                    // --verbose
                ]
            }
        }
    }
};

function loadServices() {
    try {
        Services.chromedriver = require('chromedriver');
    } catch (err) {}

    try {
        Services.geckodriver = require('geckodriver');
    } catch (err) {}
}
